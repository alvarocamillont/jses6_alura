{"version":3,"sources":["../../app-es6/services/HttpService.js"],"names":["HttpService","res","ok","Error","statusText","url","fetch","then","_handleErrors","json","dado","headers","method","body","JSON","stringify"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAAaA,W;;;;;;;wCACIC,G,EAAK;AAClB,gBAAI,CAACA,IAAIC,EAAT,EAAa,MAAM,IAAIC,KAAJ,CAAUF,IAAIG,UAAd,CAAN;AACb,mBAAOH,GAAP;AACD;;;8BAEII,G,EAAK;AAAA;;AACR,mBAAOC,MAAMD,GAAN,EACEE,IADF,CACO;AAAA,qBAAO,MAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,aADP,EAEEM,IAFF,CAEO;AAAA,qBAAON,IAAIQ,IAAJ,EAAP;AAAA,aAFP,CAAP;AAGD;;;+BACKJ,G,EAAKK,I,EAAM;AAAA;;AACf,mBAAOJ,MAAMD,GAAN,EAAW;AAChBM,uBAAS,EAAE,gBAAgB,kBAAlB,EADO;AAEhBC,sBAAQ,MAFQ;AAGhBC,oBAAMC,KAAKC,SAAL,CAAeL,IAAf;AAHU,aAAX,EAKFH,IALE,CAKG;AAAA,qBAAO,OAAKC,aAAL,CAAmBP,GAAnB,CAAP;AAAA,aALH,CAAP;AAMD","file":"HttpService.js","sourcesContent":["export class HttpService {\r\n  _handleErrors (res) {\r\n    if (!res.ok) throw new Error(res.statusText)\r\n    return res\r\n  }\r\n\r\n  get (url) {\r\n    return fetch(url)\r\n            .then(res => this._handleErrors(res))\r\n            .then(res => res.json())\r\n  }\r\n  post (url, dado) {\r\n    return fetch(url, {\r\n      headers: { 'Content-Type': 'application/json' },\r\n      method: 'post',\r\n      body: JSON.stringify(dado)\r\n    })\r\n        .then(res => this._handleErrors(res))\r\n  }\r\n}\r\n"]}